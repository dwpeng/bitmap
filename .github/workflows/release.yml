name: Python package build and publish
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  schedule:
    - cron: '0 5 * * *'

jobs:
  build:
    strategy:
      matrix:
        python-version: [3.6, 3.7, 3.8, 3.9, '3.10']
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    timeout-minutes: 30
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      if: matrix.os != 'windows-latest'
      run: |
        python -m pip install build
        python -m pip install --upgrade pip
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Install dependencies on Windows
      if: matrix.os == 'windows-latest'
      run: |
        python -m pip install build
        python -m pip install --upgrade pip
        if (Test-Path -Path '.\requirements.txt' -PathType Leaf) {pip install -r requirements.txt}

    - name: Build wheels
      run: python -m build --no-isolation --wheel --outdir wheelhouse

    - name: Publish wheels to PyPI Unix
      if: matrix.os != 'windows-latest' 
      continue-on-error: true
      env:
        TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
        TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
      run: |
        twine upload wheelhouse/*.whl

    - name: Publish wheels to PyPI Windows
      if: matrix.os == 'windows-latest' 
      continue-on-error: true
      env:
        TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
        TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
      run: |
        twine upload (Get-ChildItem wheelhouse/*.whl)
